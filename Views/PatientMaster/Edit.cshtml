@model DOTNETCOREEXAMPLE.Models.Class_PATIENT_MASTER
@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}




<hr />
@using (Html.BeginForm("Edit", "PatientMaster", FormMethod.Post,
                     new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="section section-sm section-bottom">
        <div class="container">

            <div class="row ">

                <h3 class="title-text"> Patient - Edit</h3>
                <div class="appointmentform">
                    <div>
                        <!-- <p class="text-theme appointment-sub-title">Please fill in your details to book your slot</p>-->

                    </div>
                    @*<form id="frmSubmit" onload="OnChange()">*@
                        <h3> User </h3>
                        <div class="field-group">

                            <div class="form-group  col-sm-2">
                                <label for="inputEmail">Phone Number</label>
                            </div>
                            <div class="form-group  col-sm-3">
                                @ViewBag.mobile
                                @*<input type="number" class="form-control" id="PHONENUMBER" name="PHONENUMBER" placeholder=" ">*@
                                @*@Html.TextBoxFor(model => model.PHONENUMBER, "", new { maxLength = 24, size = 24, @class = "form-control", Value = @ViewBag.phonenumber })
                                    @Html.ValidationMessageFor(m => m.PHONENUMBER, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="form-group  col-sm-2 send-otp">
                                @*<button type="submit" class="btn btn-lg btn-primary" onclick="SendOTP()">Send OTP</button>*@
                            </div>
                            <div class="form-group  col-sm-2 ">
                                @*<label for="inputEmail">Enter OTP</label>*@
                            </div>
                            <div class="form-group  col-sm-3">
                                @*@Html.TextBox("enterotp", "", new { OnChange= "OnChange()",@id = "enterotp", @class = "form-control" })*@
                                @*<input type="email" class="form-control" id="inputEmail" placeholder=" ">*@
                            </div>

                            <div class="clear-fix"> </div>
                        </div>

                        <h3></h3>
                        Patient's Detail



                        <div class="field-group">
                            <div class="form-group  col-sm-6">
                                <label for="inputEmail">Patient Name</label>


                                @Html.TextBoxFor(model => model.PATIENTNAME, new { @class = "form-control", @required = "required", @type = "text", onkeypress = "return onlyAlphabets(event,this);" })
                                @Html.HiddenFor(model => model.PATIENTID, new { @class = "form-control" })


                                @Html.ValidationMessageFor(m => m.PATIENTNAME)
                                @*<input type="email" class="form-control" id="inputEmail" placeholder=" ">*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="inputEmail">Age (Yrs.)</label>
                                @Html.TextBoxFor(model => model.AGE, new { @class = "form-control", @type = "number", @required = "required", @min = 1 })
                                @Html.ValidationMessageFor(m => m.AGE)
                                @*<input type="text" class="form-control" id="" placeholder=" ">*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="inputEmail">Weight (Kgs.)</label>
                                @Html.TextBoxFor(model => model.WEIGHT, new { @class = "form-control", @type = "number", @required = "required", @min = 1 })
                                @Html.ValidationMessageFor(m => m.WEIGHT)
                                @*<input type="email" class="form-control" id="inputEmail" placeholder=" ">*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="slot">Gender </label>
                                @Html.DropDownListFor(x => x.GENDER, new SelectList(ViewBag.GENDERS, "Value", "Text"), "--SELECT--", new { @class = "form-control", @Value = @ViewBag.GENDER })

                                @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
                                @*<select id="slot" class="form-control">
                <option selected>Choose...</option>
                <option>Male</option>
                <option>Female</option>
            </select>*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="message">
                                    Address
                                    <!-- <span class="required">*</span> -->
                                </label>
                                @Html.TextAreaFor(model => model.ADDRESS, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ADDRESS)
                                @*<textarea class="form-control" rows="6" name="message" id="message"></textarea>*@
                            </div>

                            <div class="form-group  col-sm-6">
                                <label for="inputEmail">Pin</label>
                                @Html.TextBoxFor(model => model.PIN, new { @class = "form-control", @required = "required", @type = "number" })
                                @Html.ValidationMessageFor(m => m.PIN)

                                @*<input type="email" class="form-control" id="inputEmail" placeholder=" ">*@
                            </div>

                            <div class="form-group  col-sm-6">
                                <label for="inputEmail">Alternate Mobile No.</label>
                                @Html.TextBoxFor(model => model.ALTERNATEMOBILENUMBER, new { @class = "form-control", @type = "number", @required = "required" })
                                @Html.ValidationMessageFor(m => m.ALTERNATEMOBILENUMBER)
                                @*<input type="email" class="form-control" id="inputEmail" placeholder=" ">*@
                            </div>
                            <div class="form-group  col-sm-6">
                                <label for="inputEmail">Email ID</label>
                                @Html.TextBoxFor(model => model.EMAIL, new { @class = "form-control", @type = "email", @required = "required" })
                                @Html.ValidationMessageFor(m => m.EMAIL)
                                @Html.HiddenFor(model => model.USERID, new { @class = "form-control", Value = @HttpContextAccessor.HttpContext.Session.GetString("UserId") })
                                @*<input type="email" class="form-control" id="inputEmail" placeholder=" ">*@
                            </div>
                            <div class="form-group  col-sm-6">

                                <label class="form-label" for="customFile">
                                    Upload Photo  @*or
                <button style="width:150px !important" id="btnVerify" onclick="OpenToClick()" name="btnVerify" type="button" class="btn btn-lg btn-primary">Click a Photo</button>*@

                                </label>
                                @*<input type="file" class="form-control file" id="customFile" />*@
                                <input type="file" class="form-control file" name="file" id="file" /><br><br>
                                @*@Html.HiddenFor(model => model.UPLOADORCLICKPHOTO, new { maxLength = 24, size = 24, @class = "form-control" })*@
                                @*<input type="submit" value="Upload file" />*@

                                @ViewBag.Message
                                @*<p>  A prescription must be shared with the technician before the procedure </p>*@
                            </div>
                            <div class="clear-fix"> </div>
                        </div>





                        <div class="form-group  ">
                            <label for="inputEmail"></label>
                            <button type="submit" class="btn btn-lg btn-primary" id="btnSubmit">Submit</button>
                        </div>
                    @*</form>*@
                </div>



                <!-- col 2 after form-->
                <!-- col 2 after form-->
            </div>
        </div>
    </div>

    @*<div class="form-horizontal">
            <h4>Class_PATIENT_MASTER</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PATIENTID)

            <div class="form-group">
                @Html.LabelFor(model => model.PATIENTNAME, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PATIENTNAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PATIENTNAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AGE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AGE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AGE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WEIGHT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WEIGHT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WEIGHT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GENDER, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GENDER, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ADDRESS, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ADDRESS, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ALTERNATEMOBILENUMBER, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ALTERNATEMOBILENUMBER, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ALTERNATEMOBILENUMBER, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>*@
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
</div>
@*<div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="PATIENTID" />
                <div class="form-group">
                    <label asp-for="PATIENTNAME" class="control-label"></label>
                    <input asp-for="PATIENTNAME" class="form-control" />
                    <span asp-validation-for="PATIENTNAME" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="AGE" class="control-label"></label>
                    <input asp-for="AGE" class="form-control" />
                    <span asp-validation-for="AGE" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="WEIGHT" class="control-label"></label>
                    <input asp-for="WEIGHT" class="form-control" />
                    <span asp-validation-for="WEIGHT" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="GENDER" class="control-label"></label>
                    <input asp-for="GENDER" class="form-control" />
                    <span asp-validation-for="GENDER" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ADDRESS" class="control-label"></label>
                    <input asp-for="ADDRESS" class="form-control" />
                    <span asp-validation-for="ADDRESS" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ALTERNATEMOBILENUMBER" class="control-label"></label>
                    <input asp-for="ALTERNATEMOBILENUMBER" class="form-control" />
                    <span asp-validation-for="ALTERNATEMOBILENUMBER" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="EMAIL" class="control-label"></label>
                    <input asp-for="EMAIL" class="form-control" />
                    <span asp-validation-for="EMAIL" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="USERID" class="control-label"></label>
                    <input asp-for="USERID" class="form-control" />
                    <span asp-validation-for="USERID" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </form>
        </div>
    </div>*@

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    function onlyAlphabets(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32 )
            return true;
            else
            return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }
</script>